// ledger.did — Minimal ICRC-1 interface for GenesisNet

// ---- Types ----
type Subaccount = blob;                 // 32 bytes (opsional)
type Memo        = blob;
type Timestamp   = nat64;

type Account = record {
  owner : principal;
  subaccount : opt Subaccount;
};

type Value = variant {
  Nat  : nat;
  Int  : int;
  Text : text;
  Blob : blob;
  Nat8 : nat8;
  Array : vec Value;
  Map   : vec record { text; Value };
  Opt   : opt Value;
};

type Metadata = vec record { text; Value };

type TransferArgs = record {
  from_subaccount : opt Subaccount;
  to              : Account;
  amount          : nat;               // jumlah token
  fee             : opt nat;           // jika None → pakai default fee
  memo            : opt Memo;
  created_at_time : opt Timestamp;     // untuk idempotency & anti replay
};

type TransferError = variant {
  BadFee                 : record { expected_fee : nat };
  InsufficientFunds      : record { balance : nat };
  TooOld                 : null;
  CreatedInFuture        : record { ledger_time : Timestamp };
  TemporarilyUnavailable : null;
  Duplicate              : record { duplicate_of : nat }; // biasanya block index
  GenericError           : record { error_code : nat; message : text };
};

type TransferResult = variant { Ok : nat; Err : TransferError }; // Ok → block index

type SupportedStandard = record { name : text; url : text };

// ---- Service ----
service : {
  // ICRC-1 base
  icrc1_name                : () -> (text)       query;
  icrc1_symbol              : () -> (text)       query;
  icrc1_decimals            : () -> (nat8)       query;
  icrc1_metadata            : () -> (Metadata)   query;
  icrc1_total_supply        : () -> (nat)        query;
  icrc1_minting_account     : () -> (opt Account) query;
  icrc1_fee                 : () -> (nat)        query;
  icrc1_balance_of          : (Account) -> (nat) query;
  icrc1_transfer            : (TransferArgs) -> (TransferResult);
  icrc1_supported_standards : () -> (vec SupportedStandard) query;

  // (Opsional) util ringan buat debug lokal
  // health : () -> (text) query;
}
